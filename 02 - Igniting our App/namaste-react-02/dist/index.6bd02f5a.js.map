{"mappings":"AAAA;;;;;;;;;;;;;;;CAeC,GAED,MAAM,SAAS,MAAM,aAAa,CAChC,OACA;IAAE,IAAI;AAAS,GACf;IACE,MAAM,aAAa,CACjB,OACA;QAAE,IAAI;IAAQ,GACd,sDAAsD;IACtD;QACE,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IAEH,MAAM,aAAa,CACjB,OACA;QAAE,IAAI;IAAS,GACf,sDAAsD;IACtD;QACE,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CAEJ;AAGH;;;;;;;;;;CAUC,GAED,QAAQ,GAAG,CAAC;AAEZ,kFAAkF;AAClF,mEAAmE;AACnE,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AAEzD,+FAA+F;AAC/F,gGAAgG;AAChG,KAAK,MAAM,CAAC","sources":["App.js"],"sourcesContent":["/**\r\n * \r\n * <div id=\"parent\">\r\n *    <div id=\"child\">\r\n *      <h1>I'm h1 tag</h1>\r\n *      <h2>I'm h2 tag</h2>\r\n *    </div>\r\n *    <div id=\"child2\">\r\n *      <h1>I'm h1 tag</h1>\r\n *      <h2>I'm h2 tag</h2>\r\n *    </div>\r\n * </div>\r\n * \r\n * ReactElement(Object) => HTML(Browser Understands)\r\n * \r\n */\r\n\r\nconst parent = React.createElement(\r\n  \"div\",\r\n  { id: \"parent\" },\r\n  [\r\n    React.createElement(\r\n      \"div\",\r\n      { id: \"child\" },\r\n      // Creating siblings -> use array in the 3rd argument!\r\n      [\r\n        React.createElement(\"h1\", {}, \"I'm h1 tag\"),\r\n        React.createElement(\"h2\", {}, \"I'm h2 tag\")\r\n      ]\r\n    ),\r\n    React.createElement(\r\n      \"div\",\r\n      { id: \"child2\" },\r\n      // Creating siblings -> use array in the 3rd argument!\r\n      [\r\n        React.createElement(\"h1\", {}, \"I'm h1 tag\"),\r\n        React.createElement(\"h2\", {}, \"I'm h2 tag\")\r\n      ]\r\n    ),\r\n  ]\r\n);\r\n\r\n/**\r\n * \r\n// Creation of our element using React\r\nconst heading = React.createElement(\r\n  \"h1\",\r\n  { id: \"heading\" },                    // second args is for the attributes of a tag\r\n  \"Hello World from React!\"\r\n);\r\n\r\nconsole.log(heading); // not an actual h1 tag yet! this is an object\r\n */\r\n\r\nconsole.log(parent);\r\n\r\n// React needs a root to work on, creating the root using our div element earlier.\r\n// Everything that we will render, we will render inside this root.\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n// Rendering our elements in our root. This is the one who is converting the object to element.\r\n// root.render() replaces anything and everything that is currently ONLY inside the root element\r\nroot.render(parent);"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}